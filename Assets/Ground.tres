[gd_resource type="VisualShader" load_steps=5 format=3 uid="uid://qogiayfdhdbe"]

[ext_resource type="Texture2D" uid="uid://bgdqfr63btrr0" path="res://Assets/Sand.jpg" id="1_v8ln2"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_uhbtd"]
texture = ExtResource("1_v8ln2")

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_v8ln2"]
default_input_values = [1, Vector2(0.25, 0.25), 2, Vector2(0, 0)]
function = 1

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_uhbtd"]
input_name = "uv"

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, depth_test_default, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D tex_frg_3;



void fragment() {
// Input:5
	vec2 n_out5p0 = UV;


// UVFunc:4
	vec2 n_in4p1 = vec2(0.25000, 0.25000);
	vec2 n_in4p2 = vec2(0.00000, 0.00000);
	vec2 n_out4p0 = (n_out5p0 - n_in4p2) * n_in4p1 + n_in4p2;


// Texture2D:3
	vec4 n_out3p0 = texture(tex_frg_3, n_out4p0);


// Output:0
	ALBEDO = vec3(n_out3p0.xyz);


}
"
nodes/vertex/0/position = Vector2(400, 160)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_uhbtd")
nodes/fragment/3/position = Vector2(-60, 360)
nodes/fragment/4/node = SubResource("VisualShaderNodeUVFunc_v8ln2")
nodes/fragment/4/position = Vector2(-360, 480)
nodes/fragment/5/node = SubResource("VisualShaderNodeInput_uhbtd")
nodes/fragment/5/position = Vector2(-720, 540)
nodes/fragment/connections = PackedInt32Array(3, 0, 0, 0, 5, 0, 4, 0, 4, 0, 3, 0)
